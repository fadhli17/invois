import React, { useEffect, useState } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import axios from 'axios';
import { API_BASE_URL } from '../config/api';
import { formatCurrency, formatDate } from '../utils/helpers';

// Dedicated A4 print-only view for an invoice
const InvoicePrint = () => {
  const { id } = useParams();
  const navigate = useNavigate();
  const [invoice, setInvoice] = useState(null);
  const [loading, setLoading] = useState(true);
  const [itemsMode, setItemsMode] = useState('structured'); // 'structured' or 'freeform'

  useEffect(() => {
    const fetchInvoice = async () => {
      try {
        const res = await axios.get(`${API_BASE_URL}/api/invoices/${id}`);
        const invoiceData = res.data;
        setInvoice(invoiceData);
        
        // Detect items mode based on data
        const hasFreeformContent = invoiceData.freeformItems && invoiceData.freeformItems.trim() !== '';
        const hasStructuredContent = invoiceData.items && invoiceData.items.length > 0 && 
          invoiceData.items.some(item => item.description && item.description.trim() !== '');
        
        // Check if structured items look like they were auto-generated from freeform
        const structuredItemsLookAutoGenerated = hasStructuredContent && hasFreeformContent && 
          invoiceData.items.filter(item => parseFloat(item.unitPrice) === 0).length > invoiceData.items.length * 0.5;
        
        console.log('InvoicePrint - Mode detection:', {
          hasFreeformContent,
          hasStructuredContent,
          structuredItemsLookAutoGenerated,
          freeformItems: invoiceData.freeformItems,
          itemsCount: invoiceData.items ? invoiceData.items.length : 0
        });
        
        if (hasFreeformContent && (!hasStructuredContent || structuredItemsLookAutoGenerated)) {
          console.log('InvoicePrint - Detected freeform mode');
          setItemsMode('freeform');
        } else if (hasStructuredContent && !hasFreeformContent) {
          console.log('InvoicePrint - Detected structured mode');
          setItemsMode('structured');
        } else {
          console.log('InvoicePrint - Defaulting to structured mode');
          setItemsMode('structured');
        }
      } catch (e) {
        navigate('/invoices');
      } finally {
        setLoading(false);
      }
    };
    fetchInvoice();
  }, [id, navigate]);

     const handleClose = () => {
     // If opened via window.open, allow closing the tab
 if (window.opener) {
 try { window.close(); return; } catch (e) {}
    }
   // Otherwise, navigate back if possible, or fallback to invoice view
if (window.history.length > 1) {
   navigate(-1);
  } else {
   navigate(`/invoices/view/${id}`);
   }
    };

  // Auto-trigger print when invoice is ready
  useEffect(() => {
    if (!loading && invoice) {
      // allow browser to paint first
      const t = setTimeout(() => {
        window.print();
      }, 250);
      return () => clearTimeout(t);
    }
  }, [loading, invoice]);

  if (loading || !invoice) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-white">
        <div className="text-gray-500 text-sm">Menyiapkan cetakanâ€¦</div>
      </div>
    );
  }

  const logoUrl = invoice.companyLogo
    ? (invoice.companyLogo.startsWith('data:') ? invoice.companyLogo : `${API_BASE_URL}${invoice.companyLogo}`)
    : '';

  const totalPaid = Array.isArray(invoice.payments)
    ? invoice.payments.reduce((s, p) => s + (parseFloat(p.amount) || 0), 0)
    : (parseFloat(invoice.amountPaid) || 0);

  const outstanding = Math.max(0, (parseFloat(invoice.total) || 0) - totalPaid);

  return (
    <div className="bg-gray-50 text-gray-900 min-h-screen">
      <style>{`
        @page { size: A4; margin: 14mm; }
        @media print {
          body { -webkit-print-color-adjust: exact; print-color-adjust: exact; }
          .no-print { display: none !important; }
          .paper { box-shadow: none !important; margin: 0 !important; }
          .container-section { border: 1px solid #e5e7eb !important; }
          thead { display: table-header-group; }
          tfoot { display: table-footer-group; }
        }
        .paper { width: 210mm; min-height: 297mm; margin: 10mm auto; background: white; }
        .h-rule { border-color: #e5e7eb; }
        .print-logo { max-height: 20mm; max-width: 40mm; width: auto; height: auto; object-fit: contain; }
        .print-qr { width: 50mm; height: 80mm; object-fit: contain; }
        .container-section { 
          background: white; 
          border: 1px solid #e5e7eb; 
          border-radius: 8px; 
          padding: 1.5rem; 
          margin-bottom: 1.5rem;
          box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);
        }
        .section-header {
          display: flex;
          align-items: center;
          gap: 0.75rem;
          margin-bottom: 1rem;
          padding-bottom: 0.75rem;
          border-bottom: 2px solid #f3f4f6;
        }
        .section-icon {
          width: 1.5rem;
          height: 1.5rem;
          background: #3b82f6;
          border-radius: 0.375rem;
          display: flex;
          align-items: center;
          justify-content: center;
          color: white;
        }
        .section-title {
          font-size: 1.125rem;
          font-weight: 600;
          color: #111827;
        }
      `}</style>

      {/* Screen controls (hidden in print) */}
      <div className="no-print sticky top-0 z-10 bg-white border-b h-rule">
        <div className="max-w-5xl mx-auto px-4 py-2 flex gap-2 justify-end">
          <button
            onClick={() => window.print()}
            className="inline-flex items-center px-3 py-1.5 text-sm font-medium text-white bg-gray-800 rounded-md hover:bg-gray-900"
          >
            Cetak
          </button>
          <button
           onClick={handleClose}
            className="inline-flex items-center px-3 py-1.5 text-sm font-medium bg-white border border-gray-300 rounded-md hover:bg-gray-50"
          >
            Tutup
          </button>
        </div>
      </div>

      <div className="paper bg-white shadow print:shadow-none">
        <div className="max-w-5xl mx-auto px-8 py-8">
          {/* Header Section */}
          <div className="container-section">
            <div className="section-header">
              <div className="section-icon">
                <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                </svg>
              </div>
              <div className="section-title">
                {invoice.documentType === 'quote' ? 'SEBUT HARGA' : 'INVOIS'}
              </div>
            </div>
            
          <div className="flex justify-between items-start">
            <div className="flex items-start gap-4">
                {logoUrl ? (
                  <img src={logoUrl} alt="Logo" className="print-logo" />
                ) : (
                  <div className="w-20 h-12 bg-gray-100 border-2 border-dashed border-gray-300 rounded-lg flex items-center justify-center text-gray-500 text-xs text-center">
                    Logo Syarikat
                  </div>
                )}
              <div>
                  <div className="text-2xl font-bold text-gray-900">
                  {invoice.documentType === 'quote' ? 'SEBUT HARGA' : 'INVOIS'}
                </div>
                  <div className="text-sm text-gray-600 mt-1 space-y-1">
                  <div>No. {invoice.documentType === 'quote' ? 'Sebut Harga' : 'Invois'}: {invoice.invoiceNumber}</div>
                  <div>Tarikh Terbit: {formatDate(invoice.issueDate)}</div>
                  <div>Tarikh Jatuh Tempo: {formatDate(invoice.dueDate)}</div>
                </div>
              </div>
            </div>
            <div className="text-right">
                <div className="inline-flex flex-col items-end rounded-lg border border-gray-200 bg-gray-50 px-4 py-3">
              <div className="text-xs text-gray-500">No. {invoice.documentType === 'quote' ? 'Sebut Harga' : 'Invois'}</div>
                  <div className="text-lg font-semibold text-gray-900">{invoice.invoiceNumber}</div>
                </div>
              </div>
            </div>
          </div>

          {/* Company & Client Information */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            {/* From Company */}
            <div className="container-section">
              <div className="section-header">
                <div className="section-icon">
                  <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
                  </svg>
                </div>
                <div className="section-title">Dari</div>
              </div>
              <div className="text-sm space-y-2">
                <div className="font-semibold text-lg text-gray-900">{invoice.senderCompanyName}</div>
                <div className="text-gray-700 whitespace-pre-wrap">{invoice.senderCompanyAddress}</div>
                <div className="flex items-center gap-2">
                  <svg className="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                  </svg>
                  <span>{invoice.senderCompanyEmail}</span>
                </div>
                {invoice.senderCompanyPhone && (
                  <div className="flex items-center gap-2">
                    <svg className="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                    </svg>
                    <span>{invoice.senderCompanyPhone}</span>
                  </div>
                )}
                {invoice.senderCompanyRegistrationNo && (
                  <div className="flex items-center gap-2">
                    <svg className="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                    </svg>
                    <span>No. Pendaftaran: {invoice.senderCompanyRegistrationNo}</span>
                  </div>
                )}
              </div>
            </div>

            {/* To Client */}
            <div className="container-section">
              <div className="section-header">
                <div className="section-icon">
                  <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                  </svg>
                </div>
                <div className="section-title">Kepada</div>
              </div>
              <div className="text-sm space-y-2">
                {invoice.clientCompany && (
                  <div className="font-semibold text-lg text-gray-900">{invoice.clientCompany}</div>
                )}
                <div className="font-medium text-base text-gray-900">{invoice.clientName}</div>
                <div className="flex items-center gap-2">
                  <svg className="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                  </svg>
                  <span>{invoice.clientEmail}</span>
                </div>
                <div className="flex items-start gap-2">
                  <svg className="w-4 h-4 text-gray-400 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                  </svg>
                <div className="text-gray-700 whitespace-pre-wrap">{invoice.clientAddress}</div>
                </div>
                {invoice.clientPhone && (
                  <div className="flex items-center gap-2">
                    <svg className="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                    </svg>
                    <span>{invoice.clientPhone}</span>
                  </div>
                )}
              </div>
            </div>
          </div>

          {/* Items Section */}
          <div className="container-section">
            <div className="section-header">
              <div className="section-icon">
                <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01" />
                </svg>
              </div>
              <div className="section-title">
                {invoice.documentType === 'quote' ? 'Item Sebut Harga' : 'Item Invois'}
              </div>
            </div>
            
            {itemsMode === 'structured' ? (
              <div className="overflow-hidden rounded-lg ring-1 ring-gray-200">
                <table className="w-full text-sm border-collapse">
                  <thead>
                      <tr className="bg-primary-50 border-b border-gray-200">
                        <th className="text-center p-3 w-12 font-semibold text-gray-900">No.</th>
                        <th className="text-left p-3 font-semibold text-gray-900">Item</th>
                        <th className="text-center p-3 w-20 font-semibold text-gray-900">Qty</th>
                        <th className="text-right p-3 w-28 font-semibold text-gray-900">Unit (RM)</th>
                        <th className="text-right p-3 w-32 font-semibold text-gray-900">Jumlah (RM)</th>
                    </tr>
                  </thead>
                  <tbody>
                    {invoice.items.map((it, i) => (
                        <tr key={i} className={`border-b border-gray-100 ${i % 2 === 0 ? 'bg-white' : 'bg-gray-50/50'}`}>
                          <td className="p-3 text-center font-medium text-gray-700">{i + 1}</td>
                          <td className="p-3 text-gray-700">
                            <div className="font-medium">{it.description}</div>
                          </td>
                          <td className="p-3 text-center text-gray-700 font-medium">{it.quantity}</td>
                          <td className="p-3 text-right text-gray-700 font-medium">{formatCurrency(it.unitPrice)}</td>
                          <td className="p-3 text-right text-gray-900 font-semibold">{formatCurrency(it.quantity * it.unitPrice)}</td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            ) : (
              <div className="border border-gray-200 rounded-lg p-4 bg-gray-50">
                <div className="mb-3 pb-2 border-b border-gray-300">
                  <h4 className="text-sm font-semibold text-gray-900 flex items-center gap-2">
                    <svg className="w-3 h-3 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01" />
                    </svg>
                    Senarai Item
                  </h4>
                </div>
                <div className="text-sm text-gray-700 whitespace-pre-wrap leading-relaxed">
                  {invoice.freeformItems}
                </div>
                <div className="mt-3 pt-3 border-t border-gray-300">
                  <div className="text-xs text-gray-500 flex items-center gap-1">
                    <svg className="w-2.5 h-2.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                    Item ini dibuat dalam mod teks bebas
                  </div>
                </div>
              </div>
            )}
          </div>

          {/* Totals & Payment Information */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            {/* Payment Information */}
              {invoice.documentType !== 'quote' && (invoice.senderBankName || invoice.senderBankAccount || invoice.paymentQRCode) && (
              <div className="container-section">
                <div className="section-header">
                  <div className="section-icon">
                    <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z" />
                    </svg>
                  </div>
                  <div className="section-title">Maklumat Pembayaran</div>
                </div>
                <div className="text-sm space-y-3">
                  {invoice.senderBankName && (
                    <div className="flex items-center gap-2">
                      <svg className="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
                      </svg>
                      <span><span className="font-medium">Bank:</span> {invoice.senderBankName}</span>
                    </div>
                  )}
                  {invoice.senderBankAccount && (
                    <div className="flex items-center gap-2">
                      <svg className="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M7 20l4-16m2 16l4-16M6 9h14M4 15h14" />
                      </svg>
                      <span><span className="font-medium">Akaun:</span> {invoice.senderBankAccount}</span>
                    </div>
                  )}
                  {invoice.paymentQRCode && (
                    <div className="flex items-start gap-3">
                      <svg className="w-4 h-4 text-gray-400 mt-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 7h6m2 0h.01M7 7h.01M7 17h.01M17 17h.01M7 12h.01M12 12h.01M17 12h.01M12 17h.01" />
                      </svg>
                      <div>
                        <p className="font-medium mb-2">Kod QR Pembayaran:</p>
                      <img src={`${API_BASE_URL}${invoice.paymentQRCode}`} alt="QR" className="print-qr" />
                      </div>
                    </div>
                  )}
                </div>
                </div>
              )}

            {/* Totals */}
            <div className="container-section">
              <div className="section-header">
                <div className="section-icon">
                  <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z" />
                  </svg>
                </div>
                <div className="section-title">Ringkasan Jumlah</div>
              </div>
              <div className="bg-gray-50 rounded-lg p-4 text-sm">
                <div className="space-y-3">
                  <div className="flex justify-between text-gray-700">
                    <span className="font-medium">Subtotal</span>
                    <span className="font-semibold">{formatCurrency(invoice.subtotal)}</span>
                </div>
                {invoice.tax > 0 && (
                    <div className="flex justify-between text-orange-600">
                      <span className="font-medium">Cukai</span>
                    <span className="font-semibold">{formatCurrency(invoice.tax)}</span>
                  </div>
                )}
                  <div className="border-t border-gray-300 pt-3">
                    <div className="flex justify-between text-xl font-bold text-gray-900">
                      <span>Jumlah Keseluruhan</span>
                      <span>{formatCurrency(invoice.total)}</span>
                    </div>
                </div>
                {invoice.documentType !== 'quote' && (
                    <div className="mt-3 space-y-2">
                      <div className="flex justify-between text-gray-700">
                        <span className="font-medium">Bayaran Diterima</span>
                        <span className="font-semibold text-green-700">{formatCurrency(totalPaid)}</span>
                    </div>
                    {invoice.payments && invoice.payments.length > 0 && (
                        <div className="flex justify-between text-xs text-gray-500">
                        <span>Pembayaran Terakhir:</span>
                        <span>{formatDate(invoice.payments[invoice.payments.length - 1].date)}</span>
                      </div>
                    )}
                    {outstanding > 0 && (
                      <div className="flex justify-between text-red-600">
                          <span className="font-medium">Baki Tertunggak</span>
                        <span className="font-semibold">{formatCurrency(outstanding)}</span>
                      </div>
                    )}
                    </div>
                )}
                </div>
              </div>
            </div>
          </div>

          {/* Payment Records */}
          {invoice.documentType !== 'quote' && invoice.payments && invoice.payments.length > 0 && (
            <div className="container-section">
              <div className="section-header">
                <div className="section-icon">
                  <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01" />
                  </svg>
                </div>
                <div className="section-title">Rekod Pembayaran</div>
              </div>
              
              <div className="overflow-hidden rounded-lg ring-1 ring-gray-200">
                <table className="w-full border-collapse">
                  <thead>
                    <tr className="bg-gray-100 border-b border-gray-200">
                      <th className="text-left py-3 px-4 font-semibold text-gray-900">Tarikh</th>
                      <th className="text-left py-3 px-4 font-semibold text-gray-900">Jumlah</th>
                      <th className="text-left py-3 px-4 font-semibold text-gray-900">Catatan</th>
                      <th className="text-right py-3 px-4 font-semibold text-gray-900">Status</th>
                    </tr>
                  </thead>
                  <tbody>
                {invoice.payments.map((payment, index) => (
                      <tr key={payment._id || payment.id || index} className={`border-b border-gray-100 last:border-b-0 ${index % 2 === 0 ? 'bg-white' : 'bg-gray-50/50'}`}>
                        <td className="py-3 px-4 text-gray-700">
                          <div className="flex flex-col">
                            <span className="font-medium">{formatDate(payment.date)}</span>
                            <span className="text-xs text-gray-500">
                              {new Date(payment.date).toLocaleDateString('ms-MY', { 
                                weekday: 'short',
                                year: 'numeric',
                                month: 'short',
                                day: 'numeric'
                              })}
                    </span>
                  </div>
                        </td>
                        <td className="py-3 px-4 text-gray-900 font-semibold">
                          {formatCurrency(payment.amount)}
                        </td>
                        <td className="py-3 px-4 text-gray-600">
                          {payment.note || '-'}
                        </td>
                        <td className="py-3 px-4 text-right">
                          <span className="inline-flex items-center px-2 py-1 text-xs font-medium rounded-full bg-green-100 text-green-800">
                            <svg className="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
                              <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
                            </svg>
                            Diterima
                          </span>
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
              
              <div className="mt-4 pt-4 border-t border-gray-300">
                <div className="flex justify-between items-center text-sm font-semibold">
                    <span>Jumlah Pembayaran:</span>
                    <span className="text-green-600">{formatCurrency(totalPaid)}</span>
                </div>
              </div>
            </div>
          )}

          {/* Notes */}
          {invoice.notes && (
            <div className="container-section">
              <div className="section-header">
                <div className="section-icon">
                  <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-3l-4 4z" />
                  </svg>
                </div>
                <div className="section-title">Nota</div>
              </div>
              <div className="text-sm text-gray-700 whitespace-pre-wrap bg-gray-50 rounded-lg p-4">
                {invoice.notes}
              </div>
            </div>
          )}

          {/* Terms and Conditions */}
          {invoice.termsAndConditions && (
            <div className="container-section">
              <div className="section-header">
                <div className="section-icon">
                  <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
                  </svg>
                </div>
                <div className="section-title">Terma dan Syarat</div>
              </div>
              <div className="text-sm text-gray-700 whitespace-pre-wrap bg-gray-50 rounded-lg p-4">
                {invoice.termsAndConditions}
              </div>
            </div>
          )}

          {/* Footer */}
          <div className="container-section">
            <div className="text-center">
              <div className="flex items-center justify-center gap-2 mb-4">
                <div className="section-icon">
                  <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                  </svg>
                </div>
                <h3 className="text-lg font-semibold text-gray-900">Terima Kasih!</h3>
              </div>
              <div className="text-gray-600 text-sm space-y-2">
                <p className="font-medium">Terima kasih atas perniagaan anda!</p>
                <p>
                  Sila bayar dalam tempoh <span className="font-semibold text-gray-900">{invoice.dueDate ? 
                    `${Math.ceil((new Date(invoice.dueDate) - new Date(invoice.issueDate)) / (1000 * 60 * 60 * 24))} hari` : 
                    '30 hari'}</span> dari tarikh {invoice.documentType === 'quote' ? 'sebut harga' : 'invois'} ini
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default InvoicePrint;

